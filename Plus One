/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int func(int* arr, int size);

int* plusOne(int* digits, int digitsSize, int* returnSize) {
    //Index to store the index to plus one
    int index = func(digits, digitsSize);

    //set returnSize to default digitSize
    returnSize[0] = digitsSize;

    //If there's no such index in the arry
    if(index == -1) {
        //increase the size of the array by one
        //allocate the array with calloc for defaulting zeros
        int size = digitsSize + 1;
        int* arr = calloc(size, sizeof(int));

        //Plus one to the index 0
        //Logic explaination: since there's no such index in the array,
        //It implies that the digits in the integer are all 9
        //Which they became 0 after plus 1.
        arr[0] = 1;
        
        //Set returnSize to the updated size
        returnSize[0] = size;

        //return arr
        return arr;
    }
    else {
        //allocating the memory for array with the default value zeros for the elements
        int* arr = calloc(digitsSize, sizeof(int));

        //If the i is less than the index that supposed to be plus one
        //Else mean i is equal to the index, so plus one then break
        for(int i = 0; i < digitsSize; i++) {
            if(i < index)
                arr[i] = digits[i];
            else {
                arr[i] = digits[i] + 1;
                break;
            }
        }
        
        //return arr
        return arr;

    }

}

//Return the digit where we stop plusing 1
int func(int* arr, int size) {

    for(int i = size-1; i >= 0; i--) {
        if(arr[i] != 9)
            return i;
    }

//Return -1 if it's all 9
    return -1;
}
